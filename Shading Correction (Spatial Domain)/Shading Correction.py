# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D_53Q96toFwWrDPw81SiIYc4HPMErMc6
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the image (grayscale for simplicity)
image = cv2.imread('wall_image.png', cv2.IMREAD_GRAYSCALE)

# Step 1: Estimate the shading using a Gaussian blur
kernel_size = (511, 511)  # Must be an odd number
sigma = 128  # Standard deviation of the Gaussian blur
shading_estimate = cv2.GaussianBlur(image, kernel_size, sigma)

# Step 2: Normalize the image by dividing by shading estimate
normalized_image = cv2.divide(image.astype(np.float32), shading_estimate.astype(np.float32))

# Step 3: Rescale intensities to 0-255
normalized_image = cv2.normalize(normalized_image, None, 0, 255, cv2.NORM_MINMAX).astype(np.uint8)

# Display results
plt.figure(figsize=(10,5))
plt.subplot(1,3,1), plt.imshow(image, cmap='gray'), plt.title("Original Image")
plt.subplot(1,3,2), plt.imshow(shading_estimate, cmap='gray'), plt.title("Shading Estimate")
plt.subplot(1,3,3), plt.imshow(normalized_image, cmap='gray'), plt.title("Corrected Image")
plt.show()

# Save the corrected image
cv2.imwrite('wall_corrected.png', normalized_image)

